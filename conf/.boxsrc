#!/usr/bin/env bash
###
 # @Author: Cloudflying
 # @Date: 2021-12-03 23:41:53
 # @LastEditTime: 2022-01-13 19:19:27
 # @LastEditors: Cloudflying
 # @Description: 
 # @FilePath: /.boxs/conf/.boxsrc
### 

# 使用 local 定义局部变量
# 使用 export 定义全局变量

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set locale and language
export LANG="en_US.UTF-8"
export LANGUAGE="${LANGUAGE}"
export LC_ALL="${LANGUAGE}"
export LC_CTYPE="${LANGUAGE}"

local BOXS_HOME=~/.boxs
local BOXS_CONF=${BOXS_HOME}/conf
local BOXS_LOGS=${BOXS_HOME}/logs

# Config System Environment
# Darwin or Linux
if [[ "$(uname -s)" == 'Darwin' ]];then
    OSNAME='Darwin'
elif [[ "$(uname -s )" == 'Linux' ]];then
    OSNAME=$(grep '^ID=' /etc/os-release | grep '^ID=' | awk =F '=' '{print $2}')
fi

# [ -f ${BOXS_CONF}/.env ] && source ${BOXS_CONF}/.env
[ -f ${HOME}/.env ] && source ${HOME}/.env

# 加载自定义可执行文件
[ -d ${BOXS_HOME}/bin/all ] && export PATH="$PATH:${BOXS_HOME}/bin/all"
[ -d ~/.bin ] && export PATH="$PATH:${HOME}/.bin"

if [[ "${OSNAME}" == 'Darwin' ]]; then
	[ -d ${BOXS_HOME}/bin/macos ] && export PATH="$PATH:${BOXS_HOME}/bin/macos"
elif [[ "${OSNAME}" == 'Linux' ]]; then
	[ -d ${BOXS_HOME}/bin/linux ] && export PATH="$PATH:${BOXS_HOME}/bin/linux"
fi

[ -f ${BOXS_HOME}/scripts/function.sh ] && source ${BOXS_HOME}/scripts/function.sh
[ -f ${BOXS_HOME}/scripts/macos-build-env-conf.sh ] && source ${BOXS_HOME}/scripts/macos-build-env-conf.sh

# 加载自定义 aliases
echo "[+] sourcing aliases ... "
[ -f ${BOXS_HOME}/conf/aliases ] && source ${BOXS_HOME}/conf/aliases
# for aliasf in ${BOXS_HOME}/conf/aliases/* ; do
  # echo "[+] sourcing $aliasf ... "
  # source $aliasf
# done

# [ -d ${BOXS_CONF}/completion/zsh ] && fpath=(${BOXS_CONF}/completion/zsh $fpath)

# Plugins
[ -f ${BOXS_HOME}/scripts/command-not-found.sh ] && source ${BOXS_HOME}/scripts/command-not-found.sh

if [[ -f '/usr/local/bin/brew' ]]; then
    # aliyun 更新速度慢
    export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.cloud.tencent.com/homebrew-bottles/bottles"
    # export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles"
    # export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
    # export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles
fi

# PHP Composer
[ -d ~/.composer/vendor/bin ] && export PATH="$PATH:${HOME}/.composer/vendor/bin"

[ -d ~/.cargo/bin ] && export PATH="$PATH:${HOME}/.cargo/bin"
[ -d BOXS_HOME/bin ]  && export PATH="$PATH:${BOXS_HOME}/bin"

[ -d /usr/games ] && [ -z "$(echo $PATH | grep '/usr/games')" ] && export PATH="$PATH:/usr/games"
[ -d /usr/local/games ] && [ -z "$(echo $PATH | grep '/usr/local/games')" ] && export PATH="$PATH:/usr/local/games"

# Path
[ -d /usr/local/opt/coreutils/bin ] && export PATH="$PATH:/usr/local/opt/coreutils/bin"
[ -d /usr/local/opt/coreutils/libexec/gnubin ] && export PATH="$PATH:/usr/local/opt/coreutils/libexec/gnubin"
[ -d /usr/local/opt/coreutils/libexec/gnuman ] && export export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:$MANPATH

export VAGRANT_DEFAULT_PROVIDER=virtualbox
export DOCKER_REGISTRY_PREFIX=registry.cn-hongkong.aliyuncs.com/imxieke

# 获取代理地址
if [[ -n "$(command -v clash)" ]]; then
    export PROXY_ADDR=$(grep 'external-controller' ~/.config/clash/config.yaml | awk -F ': ' '{print $2}')
    export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=http://127.0.0.1:7890
fi

# export
export NVIM_HOME="~/.config/nvim"

# fzf
export FZF_DEFAULT_COMMAND='fzf'
export DISABLE_FZF_AUTO_COMPLETION=false
# alway show quote
export ZSH_HACKER_QUOTES_ENABLE_WHEN_INTERACTIVE=true

export SSH_KEY_PATH="~/.ssh/rsa_id"
# Set Default Editor
if [[ -n $(command -v nvim) ]]; then
  export EDITOR='nvim'
  export VISUAL='nvim'
elif [[ -n $(command -v vim) ]]; then
  export EDITOR='vim'
  export VISUAL='vim'
fi

export CVSEDITOR="${EDITOR}"
export SVN_EDITOR="${EDITOR}"
export GIT_EDITOR="${EDITOR}"

# Golang env
if [[ -n $(command -v go) ]]; then
    mkdir -p ~/.go/bin            # 包含可执行文件，如：编译器，Go 工具
    mkdir -p ~/.go/src            # 包含源代码构建脚本和标准库的包的完整源代码（Go 是一门开源语言）
    mkdir -p ~/.go/doc            # 包含示例程序，代码工具，本地文档等
    mkdir -p ~/.go/lib            # 包含文档模版
    mkdir -p ~/.go/misc           # 包含与支持 Go 编辑器有关的配置文件以及 cgo 的示例
    mkdir -p ~/.go/os_arch        # 包含标准库的包的对象文件（.a）
    mkdir -p ~/.go/cmd            # 包含 Go 和 C 的编译器和命令行脚本
    export GOPATH="${HOME}/.go"
    export GOBIN="${GOPATH}/bin"
    export GOSRC="${GOPATH}/src"
    export PATH="$PATH:$GOBIN"
    # https://mirrors.cloud.tencent.com/go/
    # sum.golang.org
    # proxy.golang.org
    # index.golang.org
    # 配置 GOPROXY 环境变量
    # export GOPROXY=https://goproxy.io,direct
    # 还可以设置不走 proxy 的私有仓库或组，多个用逗号相隔（可选）
    # export GOPRIVATE=git.mycompany.com,github.com/my/private
    # Qiniu
    # export GOPROXY=https://goproxy.cn
    export GOPROXY=https://mirrors.aliyun.com/goproxy/
    export GOSUMDB=gosum.io+ce6e7565+AY5qEHUk/qmHc5btzW45JVoENfazw8LielDsaI+lEbq6
fi

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"